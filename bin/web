#!/usr/bin/env node
var O = require("oolong")
var Express = require("root/lib/express")
var Config = require("root/config")
var HttpError = require("standard-http-error")
var runServer = require("root/lib/http").runServer
var redirect = require("root/lib/redirect")
var ENV = process.env.ENV
var PORT = process.env.PORT || 3000
var app = module.exports = Express.new()

if (ENV == "development") {
	app.use(Express.static(__dirname + "/../public"))
	app.use(require("morgan")("dev"))
}

app.use(require("cookie-parser")(Config.cookieSecret))
app.use(require("body-parser").urlencoded({extended: true}))
app.use(require("root/lib/middleware/method_override_middleware"))
app.use(require("root/lib/middleware/accept_middleware"))
app.use(require("root/lib/middleware/i18n_middleware"))
app.use(require("root/lib/middleware/csrf_middleware"))
app.use(require("flash-fiction/express"))
app.use(require("root/lib/middleware/maintenance_middleware"))
app.use(require("root/lib/middleware/session_middleware"))
app.use(require("root/lib/middleware/api_middleware"))

O.each({
	"/topics": "/",
	"/topics/create1": "/initiatives/new",
	"/votings": "/",
	"/discussions": "/",
	"/goodpractice": "/about",
	"/topics/:id": "/initiatives/:id",
	"/topics/:id/discussion": "/initiatives/:id/discussion",
	"/topics/:id/vote": "/initiatives/:id",
	"/topics/:id/events": "/initiatives/:id/events",
	"/topics/:id/events/create": "/initiatives/:id/events/new",
	"/initiatives/:id/events/create": "/initiatives/:id/events/new",
	"/topics/:id/votes/*": "/initiatives/:id",
	"/initiatives/:id/discussion": "/initiatives/:id",
	"/initiatives/:id/vote": "/initiatives/:id",
	"/initiatives/:id/events": "/initiatives/:id",
	"/support_us": "/donate",
}, (to, from) => app.get(from, redirect(302, to)))

O.each({
	"/": require("root/controllers/home_controller").router,
	"/donations": require("root/controllers/donations_controller").router,
	"/initiatives": require("root/controllers/initiatives_controller").router,
	"/subscriptions": require("root/controllers/subscriptions_controller").router,
	"/session": require("root/controllers/session_controller").router,
	"/user": require("root/controllers/user_controller").router,
}, (router, path) => app.use(path, router))

if (ENV == "development" || ENV == "staging") {
	app.use("/admin", require("root/controllers/admin_controller"))
}

app.use(function(_req, _res, next) { next(new HttpError(404)) })
app.use(require("root/lib/middleware/error_reporter_middleware"))

app.use(require("root/lib/middleware/error_handler_middleware").bind(null,
	function(err, req, res) {
	// Eventually when we're in control of signin, we should show the signin form
	// for 401s.
	if (err instanceof HttpError) res.render("error_page.jsx", {
		title: req.t(err.code + "_TITLE") || err.name,
		body: req.t(err.code + "_BODY") || err.message
	})
	else res.render("error_page.jsx", {
		title: req.t("500_TITLE"),
		body: req.t("500_BODY")
	})
}))

if (module.parent) return
runServer(app, PORT)
