#!/usr/bin/env node
process.title = "rahvaalgatus/cli"

var Neodoc = require("neodoc")
var concat = Array.prototype.concat.bind(Array.prototype)

var USAGE_TEXT = `
Usage: cli [options] [<command> [<args>...]]

Options:
    -h, --help           Display this help and exit.

Commands:
    parliament-sync       Sync initiatives against the parliament API.
    parliament-web-sync   Sync initiatives against the parliament web page.
    initiative-end-email  Sends emails to authors for initiative deadlines.
    initiative-signature-milestones  Records initiative signature milestones.
    expire-demo-signatures           Removes expired demo signatures.

For more help or to give feedback, please see https://github.com/rahvaalgatus .
`

var args = Neodoc.run(USAGE_TEXT, {optionsFirst: true, versionFlags: []})
if (args["--help"]) return void process.stdout.write(USAGE_TEXT.trimLeft())

var cmd = args["<command>"]
if (cmd == null) return void process.stdout.write(USAGE_TEXT.trimLeft())

var co = require("co")

var CLIS = {
  "parliament-sync":
    require.resolve("root/cli/parliament_sync_cli"),
  "parliament-web-sync":
    require.resolve("root/cli/parliament_web_sync_cli"),
  "initiative-end-email":
    require.resolve("root/cli/initiative_end_email_cli"),
  "initiative-signature-milestones":
    require.resolve("root/cli/initiative_signature_milestones_cli"),
  "expire-demo-signatures":
    require.resolve("root/cli/expire_demo_signatures_cli")
}

var cmdPath = CLIS[cmd]
if (cmdPath == null) return void die("No such command: %s", cmd)

var Config = require("root/config")
Config.logger = console

co(function*() {
	yield require(cmdPath)(concat(cmd, args["<args>"]))
}).catch(handleError)

function handleError(err) {
	require("root/lib/console_error_reporter")(err)
	console.error(err.stack.replace(/^[^\n]+\n/, ""))
	process.exitCode = 1
}

function die() {
	console.error.apply(console, arguments)
	process.exit(2)
}
